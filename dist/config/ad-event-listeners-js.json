{"files":{"index.html":{"content":"<!doctype html>\n<!--\n @license\n Copyright 2022 Google LLC. All Rights Reserved.\n SPDX-License-Identifier: Apache-2.0\n-->\n<html>\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <meta name=\"description\" content=\"Monitor and report on ad events fired by GPT.\" />\n    <title>Ad event listeners</title>\n    <script async src=\"https://securepubads.g.doubleclick.net/tag/js/gpt.js\"></script>\n    <script>\n      window.googletag = window.googletag || { cmd: [] };\n\n      let requestedTimestamp = {};\n\n      googletag.cmd.push(() => {\n        // Define ad slots.\n        googletag\n          .defineSlot(\"/6355419/Travel/Europe\", [728, 90], \"ad-slot-1\")\n          .addService(googletag.pubads());\n        googletag\n          .defineSlot(\"/6355419/Travel/Europe\", [750, 200], \"ad-slot-2\")\n          .addService(googletag.pubads());\n\n        // This listener will be called when an impression is considered viewable.\n        googletag.pubads().addEventListener(\"impressionViewable\", (event) => {\n          const slotId = event.slot.getSlotElementId();\n          printEventMessage(\"Impression has become viewable.\", slotId);\n        });\n\n        // This listener will be called when a slot's creative iframe load event\n        // fires.\n        googletag.pubads().addEventListener(\"slotOnload\", (event) => {\n          const slotId = event.slot.getSlotElementId();\n          printEventMessage(\"Creative iframe load event has fired.\", slotId);\n        });\n\n        // This listener will be called when a slot has finished rendering.\n        googletag.pubads().addEventListener(\"slotRenderEnded\", (event) => {\n          const slotId = event.slot.getSlotElementId();\n\n          // Record details of the rendered ad.\n          const details = {\n            \"Advertiser ID\": event.advertiserId,\n            \"Campaign ID\": event.campaignId,\n            \"Company IDs\": event.companyIds,\n            \"Creative ID\": event.creativeId,\n            \"Creative Template ID\": event.creativeId,\n            \"Is backfill?\": event.isBackfill,\n            \"Is empty?\": event.isEmpty,\n            \"Label IDs\": event.labelIds,\n            \"Line Item ID\": event.lineItemId,\n            Size: typeof event.size === \"string\" ? event.size : event.size?.join(\"x\") ?? null,\n            \"Slot content changed?\": event.slotContentChanged,\n            \"Source Agnostic Creative ID\": event.sourceAgnosticCreativeId,\n            \"Source Agnostic Line Item ID\": event.sourceAgnosticLineItemId,\n            \"Yield Group IDs\": event.yieldGroupIds,\n          };\n\n          printEventMessage(\"Slot has finished rendering.\", slotId, details);\n        });\n\n        // This listener will be called when the specified service actually\n        // sets an ad request for a slot. Each slot will fire this event, even\n        // though they may be batched together in a single request if single\n        // request architecture (SRA) is enabled.\n        googletag.pubads().addEventListener(\"slotRequested\", (event) => {\n          const slotId = event.slot.getSlotElementId();\n          requestedTimestamp[slotId] = Date.now();\n          printEventMessage(\"Slot has been requested.\", slotId);\n        });\n\n        // This listener will be called when an ad response has been received for\n        // a slot.\n        googletag.pubads().addEventListener(\"slotResponseReceived\", (event) => {\n          const slotId = event.slot.getSlotElementId();\n          printEventMessage(\"Ad response has been received.\", slotId);\n        });\n\n        // This listener will be called whenever the on-screen percentage of an ad\n        // slot's area changes.\n        googletag.pubads().addEventListener(\"slotVisibilityChanged\", (event) => {\n          const slotId = event.slot.getSlotElementId();\n\n          // Record details of the event.\n          const details = { \"Visible area\": `${event.inViewPercentage}%` };\n\n          printEventMessage(\"Visibility has changed.\", slotId, details);\n        });\n\n        // Enable SRA and services.\n        googletag.pubads().enableSingleRequest();\n        googletag.enableServices();\n      });\n\n      function printEventMessage(eventMessage, slotId, details = {}) {\n        const row = document.getElementsByClassName(\"status-row\")[0].cloneNode(true);\n\n        const cells = row.getElementsByClassName(\"status-cell\");\n        cells[0].textContent = slotId;\n        cells[1].textContent = eventMessage;\n        for (const key in details) {\n          if (!details.hasOwnProperty(key) || !details[key]) continue;\n\n          const detailElem = document.createElement(\"p\");\n          detailElem.className = \"status-detail\";\n          detailElem.textContent = `${key}: ${details[key]}`;\n          cells[1].appendChild(detailElem);\n        }\n        cells[2].textContent = `${Date.now() - requestedTimestamp[slotId]}ms`;\n\n        document.getElementsByClassName(\"status-container\")[0].appendChild(row);\n      }\n    </script>\n    <style>\n      .status,\n      .status-row {\n        display: inline-table;\n        width: 750px;\n      }\n\n      .status-container {\n        height: 400px;\n        overflow: scroll;\n        width: 100%;\n      }\n\n      .status-row:nth-child(even) {\n        background-color: lightsteelblue;\n      }\n\n      .status-cell {\n        float: left;\n        min-width: 15%;\n      }\n\n      .status-detail {\n        margin: 0;\n        padding-left: 1em;\n      }\n\n      .event {\n        width: 50%;\n      }\n    </style>\n  </head>\n  <body>\n    <span>Ad slot 1</span>\n    <div id=\"ad-slot-1\" style=\"width: 728px; height: 90px\"></div>\n\n    <span>Ad slot 2</span>\n    <div id=\"ad-slot-2\" style=\"width: 750px; height: 200px\"></div>\n\n    <div class=\"status\">\n      <div class=\"status-row\">\n        <div class=\"status-cell\"><b>Slot</b></div>\n        <div class=\"status-cell event\"><b>Event</b></div>\n        <div class=\"status-cell\"><b>Time from ad request</b></div>\n      </div>\n\n      <div class=\"status-container\"></div>\n    </div>\n    <script>\n      googletag.cmd.push(function () {\n        // Request and render all previously defined ad slots.\n        googletag.display(\"ad-slot-2\");\n      });\n    </script>\n  </body>\n</html>\n"}}}